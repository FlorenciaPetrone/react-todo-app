{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","inputText","setTodos","todos","setStatus","filterHandler","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAuCeA,MArCf,YAAmF,IAApEC,EAAmE,EAAnEA,aAAcC,EAAqD,EAArDA,UAAWC,EAA0C,EAA1CA,SAASC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,UAmBpD,OAnB8E,EAAfC,cAoB3D,iCACI,uBAAOC,MAAOL,EAAWM,SAnBR,SAACC,GACtBR,EAAaQ,EAAEC,OAAOH,QAkBmCI,KAAK,OAAOC,UAAU,eAC3E,wBAAQC,QAhBU,SAACJ,GACvBA,EAAEK,iBACFX,EAAS,GAAD,mBACDC,GADC,CAEJ,CAACW,KAAMb,EAAWc,WAAW,EAAOC,GAAoB,IAAhBC,KAAKC,aAEjDlB,EAAa,KAU2BW,UAAU,cAAcD,KAAK,SAAjE,SACI,mBAAGC,UAAU,yBAEjB,qBAAKA,UAAU,SAAf,SACI,yBAAQJ,SAXE,SAACC,GACnBJ,EAAUI,EAAEC,OAAOH,QAUsBa,KAAK,QAAQR,UAAU,cAAxD,UACI,wBAAQL,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,cAAd,kC,OCAJc,MA7BhB,YAA6C,IAA9BN,EAA6B,EAA7BA,KAAMX,EAAuB,EAAvBA,MAAOkB,EAAgB,EAAhBA,KAAMnB,EAAU,EAAVA,SAgB9B,OACI,sBAAKS,UAAU,OAAf,UACI,oBAAIA,UAAS,oBAAeU,EAAKN,UAAY,YAAc,IAA3D,SAAkED,IAClE,wBAAQF,QAdQ,WACpBV,EAASC,EAAMmB,KAAI,SAAAC,GACf,OAAGA,EAAKP,KAAOK,EAAKL,GAChB,2BACOO,GADP,IACaR,WAAYQ,EAAKR,YAG3BQ,OAO2BZ,UAAU,eAA5C,SACI,mBAAGA,UAAU,mBAEjB,wBAAQC,QApBM,WACdV,EAASC,EAAMqB,QAAO,SAAAC,GAAE,OAAIA,EAAGT,KAAOK,EAAKL,QAmBXL,UAAU,YAA1C,SACI,mBAAGA,UAAU,uBCDde,MApBf,YAAoD,IAAjCvB,EAAgC,EAAhCA,MAAOD,EAAyB,EAAzBA,SAAUyB,EAAe,EAAfA,cAEhC,OACI,sBAAKhB,UAAU,iBAAf,UACI,oBAAIA,UAAU,cACbgB,EAAcL,KAAI,SAAAD,GAAI,OACnB,cAAC,EAAD,CACIlB,MAAOA,EACPD,SAAUA,EACVY,KAAMO,EAAKP,KAEXC,UAAWM,EAAKN,UAChBM,KAAMA,GAFDA,EAAKL,WC0DfY,MAlEf,WAAe,MAEqBC,mBAAS,IAF9B,mBAEN5B,EAFM,KAEKD,EAFL,OAGa6B,mBAAS,IAHtB,mBAGN1B,EAHM,KAGCD,EAHD,OAIe2B,mBAAS,OAJxB,mBAINC,EAJM,KAIE1B,EAJF,OAK6ByB,mBAAS,IALtC,mBAKNF,EALM,KAKSI,EALT,KAQbC,qBAAU,WACRC,MACA,IAGFD,qBAAU,WACR3B,IACA6B,MACC,CAAC/B,EAAO2B,IAGX,IAAMzB,EAAgB,WACpB,OAAOyB,GACL,IAAK,YACHC,EAAiB5B,EAAMqB,QAAO,SAAAH,GAAI,OAAuB,IAAnBA,EAAKN,cAC3C,MACF,IAAK,cACHgB,EAAiB5B,EAAMqB,QAAO,SAAAH,GAAI,OAAuB,IAAnBA,EAAKN,cAC3C,MACF,QACEgB,EAAiB5B,KAKjB+B,EAAiB,WACnBC,aAAaC,QAAQ,QAASC,KAAKC,UAAUnC,KAE3C8B,EAAgB,WACpB,GAAsC,OAAlCE,aAAaI,QAAQ,SACvBJ,aAAaC,QAAQ,QAASC,KAAKC,UAAU,SAC1C,CACH,IAAIE,EAAYH,KAAKI,MAAMN,aAAaI,QAAQ,UAChDrC,EAASsC,KAGb,OACE,sBAAK7B,UAAU,MAAf,UACE,iCACE,oDAEF,cAAC,EAAD,CACEX,aAAcA,EACdE,SAAUA,EACVC,MAAOA,EACPF,UAAWA,EACXG,UAAYA,EACZC,cAAeA,IAEjB,cAAC,EAAD,CACEF,MAAOA,EACPD,SAAUA,EACVyB,cAAgBA,QCtDTe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1d84cb97.chunk.js","sourcesContent":["import React from \"react\"\n\nfunction Form({setInputText, inputText, setTodos,todos, setStatus, filterHandler}){\n\n    const inputTextHandler = (e) => {\n        setInputText(e.target.value)\n    }\n\n    const submitTodoHandler = (e) => {\n        e.preventDefault();\n        setTodos([\n            ...todos,\n            {text: inputText, completed: false, id: Math.random() * 1000}\n        ])\n        setInputText(\"\")\n   \n    }\n    const statusHandler = (e) => {\n        setStatus(e.target.value) \n    }\n\n    return(\n        <form>\n            <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\n            <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\n                <i className=\"fas fa-plus-square\"></i>\n            </button>\n            <div className=\"select\">\n                <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\n                    <option value=\"all\">All</option>\n                    <option value=\"completed\">Completed</option>\n                    <option value=\"uncompleted\">Uncompleted</option>\n                </select>\n            </div>\n         </form>\n    )\n}\n\n\nexport default Form","import React from \"react\"\n\nfunction Todo({text, todos, todo, setTodos}){\n\n    const deleteHandler = () => {\n            setTodos(todos.filter(el => el.id !== todo.id))\n    }\n    const completeHandler = () => {\n        setTodos(todos.map(item => {\n            if(item.id === todo.id){\n                return{\n                    ...item, completed: !item.completed\n                }\n            }\n            return item;\n        }))\n    }\n\n    return(\n        <div className=\"todo\">\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{text}</li>\n            <button onClick={completeHandler} className=\"complete-btn\">\n                <i className=\"fas fa-check\"></i> \n            </button>\n            <button onClick={deleteHandler} className=\"trash-btn\">\n                <i className=\"fas fa-trash\"></i> \n            </button>\n        </div>\n    )\n}\n\nexport default  Todo","import React from \"react\"        \nimport Todo from \"./Todo\"\n\n\nfunction TodoList({todos, setTodos, filteredTodos}){\n\n    return(\n        <div className=\"todo-container\">\n            <ul className=\"todo-list\"></ul>\n            {filteredTodos.map(todo => (\n                <Todo \n                    todos={todos}\n                    setTodos={setTodos}\n                    text={todo.text} \n                    key={todo.id} \n                    completed={todo.completed}\n                    todo={todo}\n                    \n                />\n            ))}\n        </div>\n    )\n}\n\nexport default TodoList ","import React, {useEffect, useState} from \"react\"\nimport './App.css';\n//Importing Components\nimport Form from \"./components/Form\"\nimport TodoList from \"./components/TodoList\"\n\nfunction App() {\n  //State stuff\n  const [inputText, setInputText] = useState(\"\")\n  const [todos, setTodos] = useState([])\n  const [status, setStatus] = useState(\"all\")\n  const [filteredTodos, setFilteredTodos] = useState([])\n\n  //RUN JUST ONCE when the app starts \n  useEffect(() => {\n    getLocalTodos()\n  },[])\n\n  //UseEffect\n  useEffect(() => {\n    filterHandler()\n    saveLocalTodos()\n  }, [todos, status])\n   \n  // Functions \n  const filterHandler = () => {\n    switch(status){\n      case \"completed\":\n        setFilteredTodos(todos.filter(todo => todo.completed === true ))\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter(todo => todo.completed === false))\n        break;\n      default:\n        setFilteredTodos(todos)\n        break;\n    }\n  }  \n  //Save to local\n  const saveLocalTodos = () => {\n      localStorage.setItem(\"todos\", JSON.stringify(todos))\n  }\n  const getLocalTodos = () => {\n    if (localStorage.getItem('todos') === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]))\n    }else{\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"))\n      setTodos(todoLocal)\n    }\n  }\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Flor's todo list</h1>\n      </header>\n      <Form \n        setInputText={setInputText} \n        setTodos={setTodos} \n        todos={todos} \n        inputText={inputText}\n        setStatus= {setStatus}\n        filterHandler={filterHandler}\n      />\n      <TodoList \n        todos={todos}\n        setTodos={setTodos}\n        filteredTodos= {filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}